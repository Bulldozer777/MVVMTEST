// <auto-generated />
using System;
using MVVMTEST.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVVMTEST.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220329110542_one")]
    partial class one
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EmployeeOrder", b =>
                {
                    b.Property<int>("EmployeesId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("EmployeesId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("EmployeeOrder");
                });

            modelBuilder.Entity("MVVMTEST.Model.DepartmentModel.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Director")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "Отдел кадрового администрирования",
                            Director = 1
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "Группа системного администрирования",
                            Director = 3
                        });
                });

            modelBuilder.Entity("MVVMTEST.Model.EmployeeModel.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patronymic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1997, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Gender = 1,
                            Name = "Наталья",
                            Patronymic = "Константиновна",
                            Surname = "Зинченко"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1997, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Gender = 0,
                            Name = "Владимир",
                            Patronymic = "Алексеевич",
                            Surname = "Жарков"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1999, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Gender = 1,
                            Name = "Надежда",
                            Patronymic = "Викторовна",
                            Surname = "Макарова"
                        });
                });

            modelBuilder.Entity("MVVMTEST.Model.OrderModel.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("OrderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 2,
                            Number = 1,
                            OrderName = "Вода 5 л"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 2,
                            Number = 2,
                            OrderName = "Вода 1,5 л"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 2,
                            Number = 3,
                            OrderName = "Вода 0,5 л"
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 1,
                            Number = 2,
                            OrderName = "Вода 1,5 л"
                        });
                });

            modelBuilder.Entity("EmployeeOrder", b =>
                {
                    b.HasOne("MVVMTEST.Model.EmployeeModel.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVMTEST.Model.OrderModel.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVVMTEST.Model.EmployeeModel.Employee", b =>
                {
                    b.HasOne("MVVMTEST.Model.DepartmentModel.Department", "Department")
                        .WithMany("DirectorEmployee")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVVMTEST.Model.DepartmentModel.Department", b =>
                {
                    b.Navigation("DirectorEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
